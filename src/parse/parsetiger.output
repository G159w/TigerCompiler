Terminals unused in grammar

   "_cast"
   "_decs"


Grammar

    0 $accept: program "end of file"

    1 program: exp
    2        | decs

    3 exp: "nil"
    4    | "integer"
    5    | "string"
    6    | "identifier" "[" exp "]" "of" exp
    7    | "identifier" "{" "}"
    8    | "identifier" "{" rule1 "}"
    9    | "new" "identifier"
   10    | lvalue
   11    | "identifier" "(" ")"
   12    | "identifier" "(" rule3 ")"
   13    | lvalue "." "identifier" "(" rule3 ")"
   14    | "-" exp
   15    | exp "+" exp
   16    | exp "-" exp
   17    | exp "*" exp
   18    | exp "/" exp
   19    | exp "=" exp
   20    | exp "<>" exp
   21    | exp ">" exp
   22    | exp "<" exp
   23    | exp ">=" exp
   24    | exp "<=" exp
   25    | exp "&" exp
   26    | exp "|" exp
   27    | "(" ")"
   28    | "(" exps ")"
   29    | lvalue ":=" exp
   30    | "if" exp "then" exp
   31    | "if" exp "then" exp "else" exp
   32    | "while" exp "do" exp
   33    | "for" "identifier" ":=" exp "to" exp "do" exp
   34    | "break"
   35    | "let" decs "in" exps "end"
   36    | "let" decs "in" "end"

   37 rule1: "identifier" "=" exp
   38      | "identifier" "=" exp rule2

   39 rule2: "," "identifier" "=" exp
   40      | "," "identifier" "=" exp rule2

   41 rule3: exp
   42      | exp rule3exp

   43 rule3exp: "," exp
   44         | "," exp rule3exp

   45 lvalue: "identifier"
   46       | lvalueexp

   47 lvalueexp: "identifier" "[" exp "]"
   48          | lvalue "." "identifier"
   49          | lvalueexp "[" exp "]"

   50 exps: exp
   51     | exp expsrec

   52 expsrec: ";" exp
   53        | ";" exp expsrec

   54 decs: %empty
   55     | dec decs

   56 dec: "type" "identifier" "=" ty
   57    | "class" "identifier" "extends" "identifier" "{" rule10 "}"
   58    | "class" "identifier" "{" rule10 "}"
   59    | vardec
   60    | "function" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   61    | "function" "identifier" "(" tyfields ")" "=" exp
   62    | "function" "identifier" "(" ")" ":" "identifier" "=" exp
   63    | "function" "identifier" "(" ")" "=" exp
   64    | "primitive" "identifier" "(" tyfields ")" ":" "identifier"
   65    | "primitive" "identifier" "(" tyfields ")"
   66    | "primitive" "identifier" "(" ")" ":" "identifier"
   67    | "primitive" "identifier" "(" ")"
   68    | "import" "string"

   69 rule10: classfield
   70       | classfield rule10

   71 vardec: "var" "identifier" ":" "identifier" ":=" exp
   72       | "var" "identifier" ":=" exp

   73 classfields: classfield

   74 classfield: vardec
   75           | "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | "method" "identifier" "(" tyfields ")" "=" exp
   77           | "method" "identifier" "(" ")" ":" "identifier" "=" exp
   78           | "method" "identifier" "(" ")" "=" exp

   79 ty: "identifier"
   80   | "{" tyfields "}"
   81   | "{" "}"
   82   | "array" "of" "identifier"
   83   | "class" "extends" "identifier" "{" classfields "}"
   84   | "class" "extends" "identifier" "{" "}"
   85   | "class" "{" classfields "}"
   86   | "class" "{" "}"

   87 tyfields: "identifier" ":" "identifier"
   88         | "identifier" ":" "identifier" rule5

   89 rule5: "," "identifier" ":" "identifier"
   90      | "," "identifier" ":" "identifier" rule5


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"string" (258) 5 68
"identifier" (259) 6 7 8 9 11 12 13 33 37 38 39 40 45 47 48 56 57 58
    60 61 62 63 64 65 66 67 71 72 75 76 77 78 79 82 83 84 87 88 89
    90
"integer" (260) 4
"&" (261) 25
"array" (262) 82
":=" (263) 29 33 71 72
"break" (264) 34
"_cast" (265)
"class" (266) 57 58 83 84 85 86
":" (267) 60 62 64 66 71 75 77 87 88 89 90
"," (268) 39 40 43 44 89 90
"/" (269) 18
"do" (270) 32 33
"." (271) 13 48
"else" (272) 31
"end" (273) 35 36
"=" (274) 19 37 38 39 40 56 60 61 62 63 75 76 77 78
"extends" (275) 57 83 84
"for" (276) 33
"function" (277) 60 61 62 63
">=" (278) 23
">" (279) 21
"if" (280) 30 31
"import" (281) 68
"in" (282) 35 36
"{" (283) 7 8 57 58 80 81 83 84 85 86
"[" (284) 6 47 49
"<=" (285) 24
"let" (286) 35 36
"(" (287) 11 12 13 27 28 60 61 62 63 64 65 66 67 75 76 77 78
"<" (288) 22
"-" (289) 14 16
"method" (290) 75 76 77 78
"<>" (291) 20
"new" (292) 9
"nil" (293) 3
"of" (294) 6 82
"|" (295) 26
"+" (296) 15
"primitive" (297) 64 65 66 67
"}" (298) 7 8 57 58 80 81 83 84 85 86
"]" (299) 6 47 49
")" (300) 11 12 13 27 28 60 61 62 63 64 65 66 67 75 76 77 78
";" (301) 52 53
"then" (302) 30 31
"*" (303) 17
"to" (304) 33
"type" (305) 56
"var" (306) 71 72
"while" (307) 32
"_decs" (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
exp (56)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36, on right: 1 6 14 15 16
    17 18 19 20 21 22 23 24 25 26 29 30 31 32 33 37 38 39 40 41 42
    43 44 47 49 50 51 52 53 60 61 62 63 71 72 75 76 77 78
rule1 (57)
    on left: 37 38, on right: 8
rule2 (58)
    on left: 39 40, on right: 38 40
rule3 (59)
    on left: 41 42, on right: 12 13
rule3exp (60)
    on left: 43 44, on right: 42 44
lvalue (61)
    on left: 45 46, on right: 10 13 29 48
lvalueexp (62)
    on left: 47 48 49, on right: 46 49
exps (63)
    on left: 50 51, on right: 28 35
expsrec (64)
    on left: 52 53, on right: 51 53
decs (65)
    on left: 54 55, on right: 2 35 36 55
dec (66)
    on left: 56 57 58 59 60 61 62 63 64 65 66 67 68, on right: 55
rule10 (67)
    on left: 69 70, on right: 57 58 70
vardec (68)
    on left: 71 72, on right: 59 74
classfields (69)
    on left: 73, on right: 83 85
classfield (70)
    on left: 74 75 76 77 78, on right: 69 70 73
ty (71)
    on left: 79 80 81 82 83 84 85 86, on right: 56
tyfields (72)
    on left: 87 88, on right: 60 61 64 65 75 76 80
rule5 (73)
    on left: 89 90, on right: 88 90


State 0

    0 $accept: . program "end of file"
    1 program: . exp
    2        | . decs
    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   54 decs: . %empty  ["end of file"]
   55     | . dec decs
   56 dec: . "type" "identifier" "=" ty
   57    | . "class" "identifier" "extends" "identifier" "{" rule10 "}"
   58    | . "class" "identifier" "{" rule10 "}"
   59    | . vardec
   60    | . "function" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   61    | . "function" "identifier" "(" tyfields ")" "=" exp
   62    | . "function" "identifier" "(" ")" ":" "identifier" "=" exp
   63    | . "function" "identifier" "(" ")" "=" exp
   64    | . "primitive" "identifier" "(" tyfields ")" ":" "identifier"
   65    | . "primitive" "identifier" "(" tyfields ")"
   66    | . "primitive" "identifier" "(" ")" ":" "identifier"
   67    | . "primitive" "identifier" "(" ")"
   68    | . "import" "string"
   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "class"       shift, and go to state 5
    "for"         shift, and go to state 6
    "function"    shift, and go to state 7
    "if"          shift, and go to state 8
    "import"      shift, and go to state 9
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "primitive"   shift, and go to state 15
    "type"        shift, and go to state 16
    "var"         shift, and go to state 17
    "while"       shift, and go to state 18

    $default  reduce using rule 54 (decs)

    program    go to state 19
    exp        go to state 20
    lvalue     go to state 21
    lvalueexp  go to state 22
    decs       go to state 23
    dec        go to state 24
    vardec     go to state 25


State 1

    5 exp: "string" .

    $default  reduce using rule 5 (exp)


State 2

    6 exp: "identifier" . "[" exp "]" "of" exp
    7    | "identifier" . "{" "}"
    8    | "identifier" . "{" rule1 "}"
   11    | "identifier" . "(" ")"
   12    | "identifier" . "(" rule3 ")"
   45 lvalue: "identifier" .  ["end of file", "&", ":=", "class", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   47 lvalueexp: "identifier" . "[" exp "]"

    "{"  shift, and go to state 26
    "["  shift, and go to state 27
    "("  shift, and go to state 28

    $default  reduce using rule 45 (lvalue)


State 3

    4 exp: "integer" .

    $default  reduce using rule 4 (exp)


State 4

   34 exp: "break" .

    $default  reduce using rule 34 (exp)


State 5

   57 dec: "class" . "identifier" "extends" "identifier" "{" rule10 "}"
   58    | "class" . "identifier" "{" rule10 "}"

    "identifier"  shift, and go to state 29


State 6

   33 exp: "for" . "identifier" ":=" exp "to" exp "do" exp

    "identifier"  shift, and go to state 30


State 7

   60 dec: "function" . "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   61    | "function" . "identifier" "(" tyfields ")" "=" exp
   62    | "function" . "identifier" "(" ")" ":" "identifier" "=" exp
   63    | "function" . "identifier" "(" ")" "=" exp

    "identifier"  shift, and go to state 31


State 8

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   30    | "if" . exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   31    | "if" . exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 32
    lvalue     go to state 21
    lvalueexp  go to state 22


State 9

   68 dec: "import" . "string"

    "string"  shift, and go to state 33


State 10

   35 exp: "let" . decs "in" exps "end"
   36    | "let" . decs "in" "end"
   54 decs: . %empty  ["in"]
   55     | . dec decs
   56 dec: . "type" "identifier" "=" ty
   57    | . "class" "identifier" "extends" "identifier" "{" rule10 "}"
   58    | . "class" "identifier" "{" rule10 "}"
   59    | . vardec
   60    | . "function" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   61    | . "function" "identifier" "(" tyfields ")" "=" exp
   62    | . "function" "identifier" "(" ")" ":" "identifier" "=" exp
   63    | . "function" "identifier" "(" ")" "=" exp
   64    | . "primitive" "identifier" "(" tyfields ")" ":" "identifier"
   65    | . "primitive" "identifier" "(" tyfields ")"
   66    | . "primitive" "identifier" "(" ")" ":" "identifier"
   67    | . "primitive" "identifier" "(" ")"
   68    | . "import" "string"
   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp

    "class"      shift, and go to state 5
    "function"   shift, and go to state 7
    "import"     shift, and go to state 9
    "primitive"  shift, and go to state 15
    "type"       shift, and go to state 16
    "var"        shift, and go to state 17

    $default  reduce using rule 54 (decs)

    decs    go to state 34
    dec     go to state 24
    vardec  go to state 25


State 11

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   27    | "(" . ")"
   28    | . "(" exps ")"
   28    | "(" . exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   50 exps: . exp
   51     | . exp expsrec

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    ")"           shift, and go to state 35
    "while"       shift, and go to state 18

    exp        go to state 36
    lvalue     go to state 21
    lvalueexp  go to state 22
    exps       go to state 37


State 12

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   14    | "-" . exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 38
    lvalue     go to state 21
    lvalueexp  go to state 22


State 13

    9 exp: "new" . "identifier"

    "identifier"  shift, and go to state 39


State 14

    3 exp: "nil" .

    $default  reduce using rule 3 (exp)


State 15

   64 dec: "primitive" . "identifier" "(" tyfields ")" ":" "identifier"
   65    | "primitive" . "identifier" "(" tyfields ")"
   66    | "primitive" . "identifier" "(" ")" ":" "identifier"
   67    | "primitive" . "identifier" "(" ")"

    "identifier"  shift, and go to state 40


State 16

   56 dec: "type" . "identifier" "=" ty

    "identifier"  shift, and go to state 41


State 17

   71 vardec: "var" . "identifier" ":" "identifier" ":=" exp
   72       | "var" . "identifier" ":=" exp

    "identifier"  shift, and go to state 42


State 18

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   32    | "while" . exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 43
    lvalue     go to state 21
    lvalueexp  go to state 22


State 19

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 44


State 20

    1 program: exp .  ["end of file"]
   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 1 (program)


State 21

   10 exp: lvalue .  ["end of file", "&", "class", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   13    | lvalue . "." "identifier" "(" rule3 ")"
   29    | lvalue . ":=" exp
   48 lvalueexp: lvalue . "." "identifier"

    ":="  shift, and go to state 57
    "."   shift, and go to state 58

    $default  reduce using rule 10 (exp)


State 22

   46 lvalue: lvalueexp .  ["end of file", "&", ":=", "class", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   49 lvalueexp: lvalueexp . "[" exp "]"

    "["  shift, and go to state 59

    $default  reduce using rule 46 (lvalue)


State 23

    2 program: decs .

    $default  reduce using rule 2 (program)


State 24

   54 decs: . %empty  ["end of file", "in"]
   55     | . dec decs
   55     | dec . decs
   56 dec: . "type" "identifier" "=" ty
   57    | . "class" "identifier" "extends" "identifier" "{" rule10 "}"
   58    | . "class" "identifier" "{" rule10 "}"
   59    | . vardec
   60    | . "function" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   61    | . "function" "identifier" "(" tyfields ")" "=" exp
   62    | . "function" "identifier" "(" ")" ":" "identifier" "=" exp
   63    | . "function" "identifier" "(" ")" "=" exp
   64    | . "primitive" "identifier" "(" tyfields ")" ":" "identifier"
   65    | . "primitive" "identifier" "(" tyfields ")"
   66    | . "primitive" "identifier" "(" ")" ":" "identifier"
   67    | . "primitive" "identifier" "(" ")"
   68    | . "import" "string"
   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp

    "class"      shift, and go to state 5
    "function"   shift, and go to state 7
    "import"     shift, and go to state 9
    "primitive"  shift, and go to state 15
    "type"       shift, and go to state 16
    "var"        shift, and go to state 17

    $default  reduce using rule 54 (decs)

    decs    go to state 60
    dec     go to state 24
    vardec  go to state 25


State 25

   59 dec: vardec .

    $default  reduce using rule 59 (dec)


State 26

    7 exp: "identifier" "{" . "}"
    8    | "identifier" "{" . rule1 "}"
   37 rule1: . "identifier" "=" exp
   38      | . "identifier" "=" exp rule2

    "identifier"  shift, and go to state 61
    "}"           shift, and go to state 62

    rule1  go to state 63


State 27

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    6    | "identifier" "[" . exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   47          | "identifier" "[" . exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 64
    lvalue     go to state 21
    lvalueexp  go to state 22


State 28

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   11    | "identifier" "(" . ")"
   12    | . "identifier" "(" rule3 ")"
   12    | "identifier" "(" . rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   41 rule3: . exp
   42      | . exp rule3exp
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    ")"           shift, and go to state 65
    "while"       shift, and go to state 18

    exp        go to state 66
    rule3      go to state 67
    lvalue     go to state 21
    lvalueexp  go to state 22


State 29

   57 dec: "class" "identifier" . "extends" "identifier" "{" rule10 "}"
   58    | "class" "identifier" . "{" rule10 "}"

    "extends"  shift, and go to state 68
    "{"        shift, and go to state 69


State 30

   33 exp: "for" "identifier" . ":=" exp "to" exp "do" exp

    ":="  shift, and go to state 70


State 31

   60 dec: "function" "identifier" . "(" tyfields ")" ":" "identifier" "=" exp
   61    | "function" "identifier" . "(" tyfields ")" "=" exp
   62    | "function" "identifier" . "(" ")" ":" "identifier" "=" exp
   63    | "function" "identifier" . "(" ")" "=" exp

    "("  shift, and go to state 71


State 32

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   30    | "if" exp . "then" exp
   31    | "if" exp . "then" exp "else" exp

    "&"     shift, and go to state 45
    "/"     shift, and go to state 46
    "="     shift, and go to state 47
    ">="    shift, and go to state 48
    ">"     shift, and go to state 49
    "<="    shift, and go to state 50
    "<"     shift, and go to state 51
    "-"     shift, and go to state 52
    "<>"    shift, and go to state 53
    "|"     shift, and go to state 54
    "+"     shift, and go to state 55
    "then"  shift, and go to state 72
    "*"     shift, and go to state 56


State 33

   68 dec: "import" "string" .

    $default  reduce using rule 68 (dec)


State 34

   35 exp: "let" decs . "in" exps "end"
   36    | "let" decs . "in" "end"

    "in"  shift, and go to state 73


State 35

   27 exp: "(" ")" .

    $default  reduce using rule 27 (exp)


State 36

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   50 exps: exp .  ["end", ")"]
   51     | exp . expsrec
   52 expsrec: . ";" exp
   53        | . ";" exp expsrec

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    ";"   shift, and go to state 74
    "*"   shift, and go to state 56

    $default  reduce using rule 50 (exps)

    expsrec  go to state 75


State 37

   28 exp: "(" exps . ")"

    ")"  shift, and go to state 76


State 38

   14 exp: "-" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   15    | exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "*"  shift, and go to state 56

    $default  reduce using rule 14 (exp)

    Conflict between rule 14 and token "&" resolved as reduce ("&" < MINUS).
    Conflict between rule 14 and token "/" resolved as shift (MINUS < "/").
    Conflict between rule 14 and token "=" resolved as reduce ("=" < MINUS).
    Conflict between rule 14 and token ">=" resolved as reduce (">=" < MINUS).
    Conflict between rule 14 and token ">" resolved as reduce (">" < MINUS).
    Conflict between rule 14 and token "<=" resolved as reduce ("<=" < MINUS).
    Conflict between rule 14 and token "<" resolved as reduce ("<" < MINUS).
    Conflict between rule 14 and token "-" resolved as reduce (%left "-").
    Conflict between rule 14 and token "<>" resolved as reduce ("<>" < MINUS).
    Conflict between rule 14 and token "|" resolved as reduce ("|" < MINUS).
    Conflict between rule 14 and token "+" resolved as reduce (%left "+").
    Conflict between rule 14 and token "*" resolved as shift (MINUS < "*").


State 39

    9 exp: "new" "identifier" .

    $default  reduce using rule 9 (exp)


State 40

   64 dec: "primitive" "identifier" . "(" tyfields ")" ":" "identifier"
   65    | "primitive" "identifier" . "(" tyfields ")"
   66    | "primitive" "identifier" . "(" ")" ":" "identifier"
   67    | "primitive" "identifier" . "(" ")"

    "("  shift, and go to state 77


State 41

   56 dec: "type" "identifier" . "=" ty

    "="  shift, and go to state 78


State 42

   71 vardec: "var" "identifier" . ":" "identifier" ":=" exp
   72       | "var" "identifier" . ":=" exp

    ":="  shift, and go to state 79
    ":"   shift, and go to state 80


State 43

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   32    | "while" exp . "do" exp

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "do"  shift, and go to state 81
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56


State 44

    0 $accept: program "end of file" .

    $default  accept


State 45

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   25    | exp "&" . exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 82
    lvalue     go to state 21
    lvalueexp  go to state 22


State 46

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   18    | exp "/" . exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 83
    lvalue     go to state 21
    lvalueexp  go to state 22


State 47

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   19    | exp "=" . exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 84
    lvalue     go to state 21
    lvalueexp  go to state 22


State 48

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   23    | exp ">=" . exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 85
    lvalue     go to state 21
    lvalueexp  go to state 22


State 49

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   21    | exp ">" . exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 86
    lvalue     go to state 21
    lvalueexp  go to state 22


State 50

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   24    | exp "<=" . exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 87
    lvalue     go to state 21
    lvalueexp  go to state 22


State 51

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   22    | exp "<" . exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 88
    lvalue     go to state 21
    lvalueexp  go to state 22


State 52

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   16    | exp "-" . exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 89
    lvalue     go to state 21
    lvalueexp  go to state 22


State 53

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   20    | exp "<>" . exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 90
    lvalue     go to state 21
    lvalueexp  go to state 22


State 54

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   26    | exp "|" . exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 91
    lvalue     go to state 21
    lvalueexp  go to state 22


State 55

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   15    | exp "+" . exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 92
    lvalue     go to state 21
    lvalueexp  go to state 22


State 56

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   17    | exp "*" . exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 93
    lvalue     go to state 21
    lvalueexp  go to state 22


State 57

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   29    | lvalue ":=" . exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 94
    lvalue     go to state 21
    lvalueexp  go to state 22


State 58

   13 exp: lvalue "." . "identifier" "(" rule3 ")"
   48 lvalueexp: lvalue "." . "identifier"

    "identifier"  shift, and go to state 95


State 59

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   49          | lvalueexp "[" . exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 96
    lvalue     go to state 21
    lvalueexp  go to state 22


State 60

   55 decs: dec decs .

    $default  reduce using rule 55 (decs)


State 61

   37 rule1: "identifier" . "=" exp
   38      | "identifier" . "=" exp rule2

    "="  shift, and go to state 97


State 62

    7 exp: "identifier" "{" "}" .

    $default  reduce using rule 7 (exp)


State 63

    8 exp: "identifier" "{" rule1 . "}"

    "}"  shift, and go to state 98


State 64

    6 exp: "identifier" "[" exp . "]" "of" exp
   15    | exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   47 lvalueexp: "identifier" "[" exp . "]"

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "]"   shift, and go to state 99
    "*"   shift, and go to state 56


State 65

   11 exp: "identifier" "(" ")" .

    $default  reduce using rule 11 (exp)


State 66

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   41 rule3: exp .  [")"]
   42      | exp . rule3exp
   43 rule3exp: . "," exp
   44         | . "," exp rule3exp

    "&"   shift, and go to state 45
    ","   shift, and go to state 100
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 41 (rule3)

    rule3exp  go to state 101


State 67

   12 exp: "identifier" "(" rule3 . ")"

    ")"  shift, and go to state 102


State 68

   57 dec: "class" "identifier" "extends" . "identifier" "{" rule10 "}"

    "identifier"  shift, and go to state 103


State 69

   58 dec: "class" "identifier" "{" . rule10 "}"
   69 rule10: . classfield
   70       | . classfield rule10
   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp
   74 classfield: . vardec
   75           | . "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | . "method" "identifier" "(" tyfields ")" "=" exp
   77           | . "method" "identifier" "(" ")" ":" "identifier" "=" exp
   78           | . "method" "identifier" "(" ")" "=" exp

    "method"  shift, and go to state 104
    "var"     shift, and go to state 17

    rule10      go to state 105
    vardec      go to state 106
    classfield  go to state 107


State 70

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   33    | "for" "identifier" ":=" . exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 108
    lvalue     go to state 21
    lvalueexp  go to state 22


State 71

   60 dec: "function" "identifier" "(" . tyfields ")" ":" "identifier" "=" exp
   61    | "function" "identifier" "(" . tyfields ")" "=" exp
   62    | "function" "identifier" "(" . ")" ":" "identifier" "=" exp
   63    | "function" "identifier" "(" . ")" "=" exp
   87 tyfields: . "identifier" ":" "identifier"
   88         | . "identifier" ":" "identifier" rule5

    "identifier"  shift, and go to state 109
    ")"           shift, and go to state 110

    tyfields  go to state 111


State 72

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   30    | "if" exp "then" . exp
   31    | . "if" exp "then" exp "else" exp
   31    | "if" exp "then" . exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 112
    lvalue     go to state 21
    lvalueexp  go to state 22


State 73

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   35    | "let" decs "in" . exps "end"
   36    | . "let" decs "in" "end"
   36    | "let" decs "in" . "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   50 exps: . exp
   51     | . exp expsrec

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "end"         shift, and go to state 113
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 36
    lvalue     go to state 21
    lvalueexp  go to state 22
    exps       go to state 114


State 74

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   52 expsrec: ";" . exp
   53        | ";" . exp expsrec

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 115
    lvalue     go to state 21
    lvalueexp  go to state 22


State 75

   51 exps: exp expsrec .

    $default  reduce using rule 51 (exps)


State 76

   28 exp: "(" exps ")" .

    $default  reduce using rule 28 (exp)


State 77

   64 dec: "primitive" "identifier" "(" . tyfields ")" ":" "identifier"
   65    | "primitive" "identifier" "(" . tyfields ")"
   66    | "primitive" "identifier" "(" . ")" ":" "identifier"
   67    | "primitive" "identifier" "(" . ")"
   87 tyfields: . "identifier" ":" "identifier"
   88         | . "identifier" ":" "identifier" rule5

    "identifier"  shift, and go to state 109
    ")"           shift, and go to state 116

    tyfields  go to state 117


State 78

   56 dec: "type" "identifier" "=" . ty
   79 ty: . "identifier"
   80   | . "{" tyfields "}"
   81   | . "{" "}"
   82   | . "array" "of" "identifier"
   83   | . "class" "extends" "identifier" "{" classfields "}"
   84   | . "class" "extends" "identifier" "{" "}"
   85   | . "class" "{" classfields "}"
   86   | . "class" "{" "}"

    "identifier"  shift, and go to state 118
    "array"       shift, and go to state 119
    "class"       shift, and go to state 120
    "{"           shift, and go to state 121

    ty  go to state 122


State 79

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   72 vardec: "var" "identifier" ":=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 123
    lvalue     go to state 21
    lvalueexp  go to state 22


State 80

   71 vardec: "var" "identifier" ":" . "identifier" ":=" exp

    "identifier"  shift, and go to state 124


State 81

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   32    | "while" exp "do" . exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 125
    lvalue     go to state 21
    lvalueexp  go to state 22


State 82

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   25    | exp "&" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   26    | exp . "|" exp

    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 25 (exp)

    Conflict between rule 25 and token "&" resolved as reduce (%left "&").
    Conflict between rule 25 and token "/" resolved as shift (AND < "/").
    Conflict between rule 25 and token "=" resolved as shift (AND < "=").
    Conflict between rule 25 and token ">=" resolved as shift (AND < ">=").
    Conflict between rule 25 and token ">" resolved as shift (AND < ">").
    Conflict between rule 25 and token "<=" resolved as shift (AND < "<=").
    Conflict between rule 25 and token "<" resolved as shift (AND < "<").
    Conflict between rule 25 and token "-" resolved as shift (AND < "-").
    Conflict between rule 25 and token "<>" resolved as shift (AND < "<>").
    Conflict between rule 25 and token "|" resolved as reduce ("|" < AND).
    Conflict between rule 25 and token "+" resolved as shift (AND < "+").
    Conflict between rule 25 and token "*" resolved as shift (AND < "*").


State 83

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   18    | exp "/" exp .  ["end of file", "&", "class", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    $default  reduce using rule 18 (exp)

    Conflict between rule 18 and token "&" resolved as reduce ("&" < DIVIDE).
    Conflict between rule 18 and token "/" resolved as reduce (%left "/").
    Conflict between rule 18 and token "=" resolved as reduce ("=" < DIVIDE).
    Conflict between rule 18 and token ">=" resolved as reduce (">=" < DIVIDE).
    Conflict between rule 18 and token ">" resolved as reduce (">" < DIVIDE).
    Conflict between rule 18 and token "<=" resolved as reduce ("<=" < DIVIDE).
    Conflict between rule 18 and token "<" resolved as reduce ("<" < DIVIDE).
    Conflict between rule 18 and token "-" resolved as reduce ("-" < DIVIDE).
    Conflict between rule 18 and token "<>" resolved as reduce ("<>" < DIVIDE).
    Conflict between rule 18 and token "|" resolved as reduce ("|" < DIVIDE).
    Conflict between rule 18 and token "+" resolved as reduce ("+" < DIVIDE).
    Conflict between rule 18 and token "*" resolved as reduce (%left "*").


State 84

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   19    | exp "=" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "-"  shift, and go to state 52
    "+"  shift, and go to state 55
    "*"  shift, and go to state 56

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 19 (exp)

    Conflict between rule 19 and token "&" resolved as reduce ("&" < EQ).
    Conflict between rule 19 and token "/" resolved as shift (EQ < "/").
    Conflict between rule 19 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 19 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 19 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 19 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 19 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 19 and token "-" resolved as shift (EQ < "-").
    Conflict between rule 19 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 19 and token "|" resolved as reduce ("|" < EQ).
    Conflict between rule 19 and token "+" resolved as shift (EQ < "+").
    Conflict between rule 19 and token "*" resolved as shift (EQ < "*").


State 85

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   23    | exp ">=" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "-"  shift, and go to state 52
    "+"  shift, and go to state 55
    "*"  shift, and go to state 56

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 23 (exp)

    Conflict between rule 23 and token "&" resolved as reduce ("&" < GE).
    Conflict between rule 23 and token "/" resolved as shift (GE < "/").
    Conflict between rule 23 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 23 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 23 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 23 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 23 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 23 and token "-" resolved as shift (GE < "-").
    Conflict between rule 23 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 23 and token "|" resolved as reduce ("|" < GE).
    Conflict between rule 23 and token "+" resolved as shift (GE < "+").
    Conflict between rule 23 and token "*" resolved as shift (GE < "*").


State 86

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   21    | exp ">" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "-"  shift, and go to state 52
    "+"  shift, and go to state 55
    "*"  shift, and go to state 56

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 21 (exp)

    Conflict between rule 21 and token "&" resolved as reduce ("&" < GT).
    Conflict between rule 21 and token "/" resolved as shift (GT < "/").
    Conflict between rule 21 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 21 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 21 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 21 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 21 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 21 and token "-" resolved as shift (GT < "-").
    Conflict between rule 21 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 21 and token "|" resolved as reduce ("|" < GT).
    Conflict between rule 21 and token "+" resolved as shift (GT < "+").
    Conflict between rule 21 and token "*" resolved as shift (GT < "*").


State 87

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   24    | exp "<=" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "-"  shift, and go to state 52
    "+"  shift, and go to state 55
    "*"  shift, and go to state 56

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 24 (exp)

    Conflict between rule 24 and token "&" resolved as reduce ("&" < LE).
    Conflict between rule 24 and token "/" resolved as shift (LE < "/").
    Conflict between rule 24 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 24 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 24 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 24 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 24 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 24 and token "-" resolved as shift (LE < "-").
    Conflict between rule 24 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 24 and token "|" resolved as reduce ("|" < LE).
    Conflict between rule 24 and token "+" resolved as shift (LE < "+").
    Conflict between rule 24 and token "*" resolved as shift (LE < "*").


State 88

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   22    | exp "<" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "-"  shift, and go to state 52
    "+"  shift, and go to state 55
    "*"  shift, and go to state 56

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 22 (exp)

    Conflict between rule 22 and token "&" resolved as reduce ("&" < LT).
    Conflict between rule 22 and token "/" resolved as shift (LT < "/").
    Conflict between rule 22 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 22 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 22 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 22 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 22 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 22 and token "-" resolved as shift (LT < "-").
    Conflict between rule 22 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 22 and token "|" resolved as reduce ("|" < LT).
    Conflict between rule 22 and token "+" resolved as shift (LT < "+").
    Conflict between rule 22 and token "*" resolved as shift (LT < "*").


State 89

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   16    | exp "-" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "*"  shift, and go to state 56

    $default  reduce using rule 16 (exp)

    Conflict between rule 16 and token "&" resolved as reduce ("&" < MINUS).
    Conflict between rule 16 and token "/" resolved as shift (MINUS < "/").
    Conflict between rule 16 and token "=" resolved as reduce ("=" < MINUS).
    Conflict between rule 16 and token ">=" resolved as reduce (">=" < MINUS).
    Conflict between rule 16 and token ">" resolved as reduce (">" < MINUS).
    Conflict between rule 16 and token "<=" resolved as reduce ("<=" < MINUS).
    Conflict between rule 16 and token "<" resolved as reduce ("<" < MINUS).
    Conflict between rule 16 and token "-" resolved as reduce (%left "-").
    Conflict between rule 16 and token "<>" resolved as reduce ("<>" < MINUS).
    Conflict between rule 16 and token "|" resolved as reduce ("|" < MINUS).
    Conflict between rule 16 and token "+" resolved as reduce (%left "+").
    Conflict between rule 16 and token "*" resolved as shift (MINUS < "*").


State 90

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   20    | exp "<>" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "-"  shift, and go to state 52
    "+"  shift, and go to state 55
    "*"  shift, and go to state 56

    "="   error (nonassociative)
    ">="  error (nonassociative)
    ">"   error (nonassociative)
    "<="  error (nonassociative)
    "<"   error (nonassociative)
    "<>"  error (nonassociative)

    $default  reduce using rule 20 (exp)

    Conflict between rule 20 and token "&" resolved as reduce ("&" < NE).
    Conflict between rule 20 and token "/" resolved as shift (NE < "/").
    Conflict between rule 20 and token "=" resolved as an error (%nonassoc "=").
    Conflict between rule 20 and token ">=" resolved as an error (%nonassoc ">=").
    Conflict between rule 20 and token ">" resolved as an error (%nonassoc ">").
    Conflict between rule 20 and token "<=" resolved as an error (%nonassoc "<=").
    Conflict between rule 20 and token "<" resolved as an error (%nonassoc "<").
    Conflict between rule 20 and token "-" resolved as shift (NE < "-").
    Conflict between rule 20 and token "<>" resolved as an error (%nonassoc "<>").
    Conflict between rule 20 and token "|" resolved as reduce ("|" < NE).
    Conflict between rule 20 and token "+" resolved as shift (NE < "+").
    Conflict between rule 20 and token "*" resolved as shift (NE < "*").


State 91

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   26    | exp "|" exp .  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "|", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 26 (exp)

    Conflict between rule 26 and token "&" resolved as shift (OR < "&").
    Conflict between rule 26 and token "/" resolved as shift (OR < "/").
    Conflict between rule 26 and token "=" resolved as shift (OR < "=").
    Conflict between rule 26 and token ">=" resolved as shift (OR < ">=").
    Conflict between rule 26 and token ">" resolved as shift (OR < ">").
    Conflict between rule 26 and token "<=" resolved as shift (OR < "<=").
    Conflict between rule 26 and token "<" resolved as shift (OR < "<").
    Conflict between rule 26 and token "-" resolved as shift (OR < "-").
    Conflict between rule 26 and token "<>" resolved as shift (OR < "<>").
    Conflict between rule 26 and token "|" resolved as reduce (%left "|").
    Conflict between rule 26 and token "+" resolved as shift (OR < "+").
    Conflict between rule 26 and token "*" resolved as shift (OR < "*").


State 92

   15 exp: exp . "+" exp
   15    | exp "+" exp .  ["end of file", "&", "class", ",", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "/"  shift, and go to state 46
    "*"  shift, and go to state 56

    $default  reduce using rule 15 (exp)

    Conflict between rule 15 and token "&" resolved as reduce ("&" < PLUS).
    Conflict between rule 15 and token "/" resolved as shift (PLUS < "/").
    Conflict between rule 15 and token "=" resolved as reduce ("=" < PLUS).
    Conflict between rule 15 and token ">=" resolved as reduce (">=" < PLUS).
    Conflict between rule 15 and token ">" resolved as reduce (">" < PLUS).
    Conflict between rule 15 and token "<=" resolved as reduce ("<=" < PLUS).
    Conflict between rule 15 and token "<" resolved as reduce ("<" < PLUS).
    Conflict between rule 15 and token "-" resolved as reduce (%left "-").
    Conflict between rule 15 and token "<>" resolved as reduce ("<>" < PLUS).
    Conflict between rule 15 and token "|" resolved as reduce ("|" < PLUS).
    Conflict between rule 15 and token "+" resolved as reduce (%left "+").
    Conflict between rule 15 and token "*" resolved as shift (PLUS < "*").


State 93

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   17    | exp "*" exp .  ["end of file", "&", "class", ",", "/", "do", "else", "end", "=", "function", ">=", ">", "import", "in", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    $default  reduce using rule 17 (exp)

    Conflict between rule 17 and token "&" resolved as reduce ("&" < TIMES).
    Conflict between rule 17 and token "/" resolved as reduce (%left "/").
    Conflict between rule 17 and token "=" resolved as reduce ("=" < TIMES).
    Conflict between rule 17 and token ">=" resolved as reduce (">=" < TIMES).
    Conflict between rule 17 and token ">" resolved as reduce (">" < TIMES).
    Conflict between rule 17 and token "<=" resolved as reduce ("<=" < TIMES).
    Conflict between rule 17 and token "<" resolved as reduce ("<" < TIMES).
    Conflict between rule 17 and token "-" resolved as reduce ("-" < TIMES).
    Conflict between rule 17 and token "<>" resolved as reduce ("<>" < TIMES).
    Conflict between rule 17 and token "|" resolved as reduce ("|" < TIMES).
    Conflict between rule 17 and token "+" resolved as reduce ("+" < TIMES).
    Conflict between rule 17 and token "*" resolved as reduce (%left "*").


State 94

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   29    | lvalue ":=" exp .  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 29 (exp)

    Conflict between rule 29 and token "&" resolved as shift (ASSIGN < "&").
    Conflict between rule 29 and token "/" resolved as shift (ASSIGN < "/").
    Conflict between rule 29 and token "=" resolved as shift (ASSIGN < "=").
    Conflict between rule 29 and token ">=" resolved as shift (ASSIGN < ">=").
    Conflict between rule 29 and token ">" resolved as shift (ASSIGN < ">").
    Conflict between rule 29 and token "<=" resolved as shift (ASSIGN < "<=").
    Conflict between rule 29 and token "<" resolved as shift (ASSIGN < "<").
    Conflict between rule 29 and token "-" resolved as shift (ASSIGN < "-").
    Conflict between rule 29 and token "<>" resolved as shift (ASSIGN < "<>").
    Conflict between rule 29 and token "|" resolved as shift (ASSIGN < "|").
    Conflict between rule 29 and token "+" resolved as shift (ASSIGN < "+").
    Conflict between rule 29 and token "*" resolved as shift (ASSIGN < "*").


State 95

   13 exp: lvalue "." "identifier" . "(" rule3 ")"
   48 lvalueexp: lvalue "." "identifier" .  ["end of file", "&", ":=", "class", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "[", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]

    "("  shift, and go to state 126

    $default  reduce using rule 48 (lvalueexp)


State 96

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   49 lvalueexp: lvalueexp "[" exp . "]"

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "]"   shift, and go to state 127
    "*"   shift, and go to state 56


State 97

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   37 rule1: "identifier" "=" . exp
   38      | "identifier" "=" . exp rule2
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 128
    lvalue     go to state 21
    lvalueexp  go to state 22


State 98

    8 exp: "identifier" "{" rule1 "}" .

    $default  reduce using rule 8 (exp)


State 99

    6 exp: "identifier" "[" exp "]" . "of" exp
   47 lvalueexp: "identifier" "[" exp "]" .  ["end of file", "&", ":=", "class", ",", "/", "do", ".", "else", "end", "=", "function", ">=", ">", "import", "in", "[", "<=", "<", "-", "method", "<>", "|", "+", "primitive", "}", "]", ")", ";", "then", "*", "to", "type", "var"]

    "of"  shift, and go to state 129

    $default  reduce using rule 47 (lvalueexp)


State 100

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   43 rule3exp: "," . exp
   44         | "," . exp rule3exp
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 130
    lvalue     go to state 21
    lvalueexp  go to state 22


State 101

   42 rule3: exp rule3exp .

    $default  reduce using rule 42 (rule3)


State 102

   12 exp: "identifier" "(" rule3 ")" .

    $default  reduce using rule 12 (exp)


State 103

   57 dec: "class" "identifier" "extends" "identifier" . "{" rule10 "}"

    "{"  shift, and go to state 131


State 104

   75 classfield: "method" . "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | "method" . "identifier" "(" tyfields ")" "=" exp
   77           | "method" . "identifier" "(" ")" ":" "identifier" "=" exp
   78           | "method" . "identifier" "(" ")" "=" exp

    "identifier"  shift, and go to state 132


State 105

   58 dec: "class" "identifier" "{" rule10 . "}"

    "}"  shift, and go to state 133


State 106

   74 classfield: vardec .

    $default  reduce using rule 74 (classfield)


State 107

   69 rule10: . classfield
   69       | classfield .  ["}"]
   70       | . classfield rule10
   70       | classfield . rule10
   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp
   74 classfield: . vardec
   75           | . "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | . "method" "identifier" "(" tyfields ")" "=" exp
   77           | . "method" "identifier" "(" ")" ":" "identifier" "=" exp
   78           | . "method" "identifier" "(" ")" "=" exp

    "method"  shift, and go to state 104
    "var"     shift, and go to state 17

    $default  reduce using rule 69 (rule10)

    rule10      go to state 134
    vardec      go to state 106
    classfield  go to state 107


State 108

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   33    | "for" "identifier" ":=" exp . "to" exp "do" exp

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56
    "to"  shift, and go to state 135


State 109

   87 tyfields: "identifier" . ":" "identifier"
   88         | "identifier" . ":" "identifier" rule5

    ":"  shift, and go to state 136


State 110

   62 dec: "function" "identifier" "(" ")" . ":" "identifier" "=" exp
   63    | "function" "identifier" "(" ")" . "=" exp

    ":"  shift, and go to state 137
    "="  shift, and go to state 138


State 111

   60 dec: "function" "identifier" "(" tyfields . ")" ":" "identifier" "=" exp
   61    | "function" "identifier" "(" tyfields . ")" "=" exp

    ")"  shift, and go to state 139


State 112

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   30    | "if" exp "then" exp .  ["end of file", "class", ",", "do", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   31    | "if" exp "then" exp . "else" exp

    "&"     shift, and go to state 45
    "/"     shift, and go to state 46
    "else"  shift, and go to state 140
    "="     shift, and go to state 47
    ">="    shift, and go to state 48
    ">"     shift, and go to state 49
    "<="    shift, and go to state 50
    "<"     shift, and go to state 51
    "-"     shift, and go to state 52
    "<>"    shift, and go to state 53
    "|"     shift, and go to state 54
    "+"     shift, and go to state 55
    "*"     shift, and go to state 56

    $default  reduce using rule 30 (exp)

    Conflict between rule 30 and token "&" resolved as shift (THEN < "&").
    Conflict between rule 30 and token "/" resolved as shift (THEN < "/").
    Conflict between rule 30 and token "else" resolved as shift (THEN < "else").
    Conflict between rule 30 and token "=" resolved as shift (THEN < "=").
    Conflict between rule 30 and token ">=" resolved as shift (THEN < ">=").
    Conflict between rule 30 and token ">" resolved as shift (THEN < ">").
    Conflict between rule 30 and token "<=" resolved as shift (THEN < "<=").
    Conflict between rule 30 and token "<" resolved as shift (THEN < "<").
    Conflict between rule 30 and token "-" resolved as shift (THEN < "-").
    Conflict between rule 30 and token "<>" resolved as shift (THEN < "<>").
    Conflict between rule 30 and token "|" resolved as shift (THEN < "|").
    Conflict between rule 30 and token "+" resolved as shift (THEN < "+").
    Conflict between rule 30 and token "*" resolved as shift (THEN < "*").


State 113

   36 exp: "let" decs "in" "end" .

    $default  reduce using rule 36 (exp)


State 114

   35 exp: "let" decs "in" exps . "end"

    "end"  shift, and go to state 141


State 115

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   52 expsrec: . ";" exp
   52        | ";" exp .  ["end", ")"]
   53        | . ";" exp expsrec
   53        | ";" exp . expsrec

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    ";"   shift, and go to state 74
    "*"   shift, and go to state 56

    $default  reduce using rule 52 (expsrec)

    expsrec  go to state 142


State 116

   66 dec: "primitive" "identifier" "(" ")" . ":" "identifier"
   67    | "primitive" "identifier" "(" ")" .  ["end of file", "class", "function", "import", "in", "primitive", "type", "var"]

    ":"  shift, and go to state 143

    $default  reduce using rule 67 (dec)


State 117

   64 dec: "primitive" "identifier" "(" tyfields . ")" ":" "identifier"
   65    | "primitive" "identifier" "(" tyfields . ")"

    ")"  shift, and go to state 144


State 118

   79 ty: "identifier" .

    $default  reduce using rule 79 (ty)


State 119

   82 ty: "array" . "of" "identifier"

    "of"  shift, and go to state 145


State 120

   83 ty: "class" . "extends" "identifier" "{" classfields "}"
   84   | "class" . "extends" "identifier" "{" "}"
   85   | "class" . "{" classfields "}"
   86   | "class" . "{" "}"

    "extends"  shift, and go to state 146
    "{"        shift, and go to state 147


State 121

   80 ty: "{" . tyfields "}"
   81   | "{" . "}"
   87 tyfields: . "identifier" ":" "identifier"
   88         | . "identifier" ":" "identifier" rule5

    "identifier"  shift, and go to state 109
    "}"           shift, and go to state 148

    tyfields  go to state 149


State 122

   56 dec: "type" "identifier" "=" ty .

    $default  reduce using rule 56 (dec)


State 123

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   72 vardec: "var" "identifier" ":=" exp .  ["end of file", "class", "function", "import", "in", "method", "primitive", "}", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 72 (vardec)


State 124

   71 vardec: "var" "identifier" ":" "identifier" . ":=" exp

    ":="  shift, and go to state 150


State 125

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   32    | "while" exp "do" exp .  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 32 (exp)

    Conflict between rule 32 and token "&" resolved as shift (DO < "&").
    Conflict between rule 32 and token "/" resolved as shift (DO < "/").
    Conflict between rule 32 and token "=" resolved as shift (DO < "=").
    Conflict between rule 32 and token ">=" resolved as shift (DO < ">=").
    Conflict between rule 32 and token ">" resolved as shift (DO < ">").
    Conflict between rule 32 and token "<=" resolved as shift (DO < "<=").
    Conflict between rule 32 and token "<" resolved as shift (DO < "<").
    Conflict between rule 32 and token "-" resolved as shift (DO < "-").
    Conflict between rule 32 and token "<>" resolved as shift (DO < "<>").
    Conflict between rule 32 and token "|" resolved as shift (DO < "|").
    Conflict between rule 32 and token "+" resolved as shift (DO < "+").
    Conflict between rule 32 and token "*" resolved as shift (DO < "*").


State 126

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   13    | lvalue "." "identifier" "(" . rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   41 rule3: . exp
   42      | . exp rule3exp
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 66
    rule3      go to state 151
    lvalue     go to state 21
    lvalueexp  go to state 22


State 127

   49 lvalueexp: lvalueexp "[" exp "]" .

    $default  reduce using rule 49 (lvalueexp)


State 128

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   37 rule1: "identifier" "=" exp .  ["}"]
   38      | "identifier" "=" exp . rule2
   39 rule2: . "," "identifier" "=" exp
   40      | . "," "identifier" "=" exp rule2

    "&"   shift, and go to state 45
    ","   shift, and go to state 152
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 37 (rule1)

    rule2  go to state 153


State 129

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    6    | "identifier" "[" exp "]" "of" . exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 154
    lvalue     go to state 21
    lvalueexp  go to state 22


State 130

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   43 rule3exp: . "," exp
   43         | "," exp .  [")"]
   44         | . "," exp rule3exp
   44         | "," exp . rule3exp

    "&"   shift, and go to state 45
    ","   shift, and go to state 100
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 43 (rule3exp)

    rule3exp  go to state 155


State 131

   57 dec: "class" "identifier" "extends" "identifier" "{" . rule10 "}"
   69 rule10: . classfield
   70       | . classfield rule10
   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp
   74 classfield: . vardec
   75           | . "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | . "method" "identifier" "(" tyfields ")" "=" exp
   77           | . "method" "identifier" "(" ")" ":" "identifier" "=" exp
   78           | . "method" "identifier" "(" ")" "=" exp

    "method"  shift, and go to state 104
    "var"     shift, and go to state 17

    rule10      go to state 156
    vardec      go to state 106
    classfield  go to state 107


State 132

   75 classfield: "method" "identifier" . "(" tyfields ")" ":" "identifier" "=" exp
   76           | "method" "identifier" . "(" tyfields ")" "=" exp
   77           | "method" "identifier" . "(" ")" ":" "identifier" "=" exp
   78           | "method" "identifier" . "(" ")" "=" exp

    "("  shift, and go to state 157


State 133

   58 dec: "class" "identifier" "{" rule10 "}" .

    $default  reduce using rule 58 (dec)


State 134

   70 rule10: classfield rule10 .

    $default  reduce using rule 70 (rule10)


State 135

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   33    | "for" "identifier" ":=" exp "to" . exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 158
    lvalue     go to state 21
    lvalueexp  go to state 22


State 136

   87 tyfields: "identifier" ":" . "identifier"
   88         | "identifier" ":" . "identifier" rule5

    "identifier"  shift, and go to state 159


State 137

   62 dec: "function" "identifier" "(" ")" ":" . "identifier" "=" exp

    "identifier"  shift, and go to state 160


State 138

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   63 dec: "function" "identifier" "(" ")" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 161
    lvalue     go to state 21
    lvalueexp  go to state 22


State 139

   60 dec: "function" "identifier" "(" tyfields ")" . ":" "identifier" "=" exp
   61    | "function" "identifier" "(" tyfields ")" . "=" exp

    ":"  shift, and go to state 162
    "="  shift, and go to state 163


State 140

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   31    | "if" exp "then" exp "else" . exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 164
    lvalue     go to state 21
    lvalueexp  go to state 22


State 141

   35 exp: "let" decs "in" exps "end" .

    $default  reduce using rule 35 (exp)


State 142

   53 expsrec: ";" exp expsrec .

    $default  reduce using rule 53 (expsrec)


State 143

   66 dec: "primitive" "identifier" "(" ")" ":" . "identifier"

    "identifier"  shift, and go to state 165


State 144

   64 dec: "primitive" "identifier" "(" tyfields ")" . ":" "identifier"
   65    | "primitive" "identifier" "(" tyfields ")" .  ["end of file", "class", "function", "import", "in", "primitive", "type", "var"]

    ":"  shift, and go to state 166

    $default  reduce using rule 65 (dec)


State 145

   82 ty: "array" "of" . "identifier"

    "identifier"  shift, and go to state 167


State 146

   83 ty: "class" "extends" . "identifier" "{" classfields "}"
   84   | "class" "extends" . "identifier" "{" "}"

    "identifier"  shift, and go to state 168


State 147

   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp
   73 classfields: . classfield
   74 classfield: . vardec
   75           | . "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | . "method" "identifier" "(" tyfields ")" "=" exp
   77           | . "method" "identifier" "(" ")" ":" "identifier" "=" exp
   78           | . "method" "identifier" "(" ")" "=" exp
   85 ty: "class" "{" . classfields "}"
   86   | "class" "{" . "}"

    "method"  shift, and go to state 104
    "}"       shift, and go to state 169
    "var"     shift, and go to state 17

    vardec       go to state 106
    classfields  go to state 170
    classfield   go to state 171


State 148

   81 ty: "{" "}" .

    $default  reduce using rule 81 (ty)


State 149

   80 ty: "{" tyfields . "}"

    "}"  shift, and go to state 172


State 150

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   71 vardec: "var" "identifier" ":" "identifier" ":=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 173
    lvalue     go to state 21
    lvalueexp  go to state 22


State 151

   13 exp: lvalue "." "identifier" "(" rule3 . ")"

    ")"  shift, and go to state 174


State 152

   39 rule2: "," . "identifier" "=" exp
   40      | "," . "identifier" "=" exp rule2

    "identifier"  shift, and go to state 175


State 153

   38 rule1: "identifier" "=" exp rule2 .

    $default  reduce using rule 38 (rule1)


State 154

    6 exp: "identifier" "[" exp "]" "of" exp .  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]
   15    | exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 6 (exp)

    Conflict between rule 6 and token "&" resolved as shift (OF < "&").
    Conflict between rule 6 and token "/" resolved as shift (OF < "/").
    Conflict between rule 6 and token "=" resolved as shift (OF < "=").
    Conflict between rule 6 and token ">=" resolved as shift (OF < ">=").
    Conflict between rule 6 and token ">" resolved as shift (OF < ">").
    Conflict between rule 6 and token "<=" resolved as shift (OF < "<=").
    Conflict between rule 6 and token "<" resolved as shift (OF < "<").
    Conflict between rule 6 and token "-" resolved as shift (OF < "-").
    Conflict between rule 6 and token "<>" resolved as shift (OF < "<>").
    Conflict between rule 6 and token "|" resolved as shift (OF < "|").
    Conflict between rule 6 and token "+" resolved as shift (OF < "+").
    Conflict between rule 6 and token "*" resolved as shift (OF < "*").


State 155

   44 rule3exp: "," exp rule3exp .

    $default  reduce using rule 44 (rule3exp)


State 156

   57 dec: "class" "identifier" "extends" "identifier" "{" rule10 . "}"

    "}"  shift, and go to state 176


State 157

   75 classfield: "method" "identifier" "(" . tyfields ")" ":" "identifier" "=" exp
   76           | "method" "identifier" "(" . tyfields ")" "=" exp
   77           | "method" "identifier" "(" . ")" ":" "identifier" "=" exp
   78           | "method" "identifier" "(" . ")" "=" exp
   87 tyfields: . "identifier" ":" "identifier"
   88         | . "identifier" ":" "identifier" rule5

    "identifier"  shift, and go to state 109
    ")"           shift, and go to state 177

    tyfields  go to state 178


State 158

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   33    | "for" "identifier" ":=" exp "to" exp . "do" exp

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "do"  shift, and go to state 179
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56


State 159

   87 tyfields: "identifier" ":" "identifier" .  ["}", ")"]
   88         | "identifier" ":" "identifier" . rule5
   89 rule5: . "," "identifier" ":" "identifier"
   90      | . "," "identifier" ":" "identifier" rule5

    ","  shift, and go to state 180

    $default  reduce using rule 87 (tyfields)

    rule5  go to state 181


State 160

   62 dec: "function" "identifier" "(" ")" ":" "identifier" . "=" exp

    "="  shift, and go to state 182


State 161

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   63 dec: "function" "identifier" "(" ")" "=" exp .  ["end of file", "class", "function", "import", "in", "primitive", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 63 (dec)


State 162

   60 dec: "function" "identifier" "(" tyfields ")" ":" . "identifier" "=" exp

    "identifier"  shift, and go to state 183


State 163

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   61 dec: "function" "identifier" "(" tyfields ")" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 184
    lvalue     go to state 21
    lvalueexp  go to state 22


State 164

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   31    | "if" exp "then" exp "else" exp .  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 31 (exp)

    Conflict between rule 31 and token "&" resolved as shift (ELSE < "&").
    Conflict between rule 31 and token "/" resolved as shift (ELSE < "/").
    Conflict between rule 31 and token "=" resolved as shift (ELSE < "=").
    Conflict between rule 31 and token ">=" resolved as shift (ELSE < ">=").
    Conflict between rule 31 and token ">" resolved as shift (ELSE < ">").
    Conflict between rule 31 and token "<=" resolved as shift (ELSE < "<=").
    Conflict between rule 31 and token "<" resolved as shift (ELSE < "<").
    Conflict between rule 31 and token "-" resolved as shift (ELSE < "-").
    Conflict between rule 31 and token "<>" resolved as shift (ELSE < "<>").
    Conflict between rule 31 and token "|" resolved as shift (ELSE < "|").
    Conflict between rule 31 and token "+" resolved as shift (ELSE < "+").
    Conflict between rule 31 and token "*" resolved as shift (ELSE < "*").


State 165

   66 dec: "primitive" "identifier" "(" ")" ":" "identifier" .

    $default  reduce using rule 66 (dec)


State 166

   64 dec: "primitive" "identifier" "(" tyfields ")" ":" . "identifier"

    "identifier"  shift, and go to state 185


State 167

   82 ty: "array" "of" "identifier" .

    $default  reduce using rule 82 (ty)


State 168

   83 ty: "class" "extends" "identifier" . "{" classfields "}"
   84   | "class" "extends" "identifier" . "{" "}"

    "{"  shift, and go to state 186


State 169

   86 ty: "class" "{" "}" .

    $default  reduce using rule 86 (ty)


State 170

   85 ty: "class" "{" classfields . "}"

    "}"  shift, and go to state 187


State 171

   73 classfields: classfield .

    $default  reduce using rule 73 (classfields)


State 172

   80 ty: "{" tyfields "}" .

    $default  reduce using rule 80 (ty)


State 173

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   71 vardec: "var" "identifier" ":" "identifier" ":=" exp .  ["end of file", "class", "function", "import", "in", "method", "primitive", "}", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 71 (vardec)


State 174

   13 exp: lvalue "." "identifier" "(" rule3 ")" .

    $default  reduce using rule 13 (exp)


State 175

   39 rule2: "," "identifier" . "=" exp
   40      | "," "identifier" . "=" exp rule2

    "="  shift, and go to state 188


State 176

   57 dec: "class" "identifier" "extends" "identifier" "{" rule10 "}" .

    $default  reduce using rule 57 (dec)


State 177

   77 classfield: "method" "identifier" "(" ")" . ":" "identifier" "=" exp
   78           | "method" "identifier" "(" ")" . "=" exp

    ":"  shift, and go to state 189
    "="  shift, and go to state 190


State 178

   75 classfield: "method" "identifier" "(" tyfields . ")" ":" "identifier" "=" exp
   76           | "method" "identifier" "(" tyfields . ")" "=" exp

    ")"  shift, and go to state 191


State 179

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   33    | "for" "identifier" ":=" exp "to" exp "do" . exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 192
    lvalue     go to state 21
    lvalueexp  go to state 22


State 180

   89 rule5: "," . "identifier" ":" "identifier"
   90      | "," . "identifier" ":" "identifier" rule5

    "identifier"  shift, and go to state 193


State 181

   88 tyfields: "identifier" ":" "identifier" rule5 .

    $default  reduce using rule 88 (tyfields)


State 182

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   62 dec: "function" "identifier" "(" ")" ":" "identifier" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 194
    lvalue     go to state 21
    lvalueexp  go to state 22


State 183

   60 dec: "function" "identifier" "(" tyfields ")" ":" "identifier" . "=" exp

    "="  shift, and go to state 195


State 184

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   61 dec: "function" "identifier" "(" tyfields ")" "=" exp .  ["end of file", "class", "function", "import", "in", "primitive", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 61 (dec)


State 185

   64 dec: "primitive" "identifier" "(" tyfields ")" ":" "identifier" .

    $default  reduce using rule 64 (dec)


State 186

   71 vardec: . "var" "identifier" ":" "identifier" ":=" exp
   72       | . "var" "identifier" ":=" exp
   73 classfields: . classfield
   74 classfield: . vardec
   75           | . "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp
   76           | . "method" "identifier" "(" tyfields ")" "=" exp
   77           | . "method" "identifier" "(" ")" ":" "identifier" "=" exp
   78           | . "method" "identifier" "(" ")" "=" exp
   83 ty: "class" "extends" "identifier" "{" . classfields "}"
   84   | "class" "extends" "identifier" "{" . "}"

    "method"  shift, and go to state 104
    "}"       shift, and go to state 196
    "var"     shift, and go to state 17

    vardec       go to state 106
    classfields  go to state 197
    classfield   go to state 171


State 187

   85 ty: "class" "{" classfields "}" .

    $default  reduce using rule 85 (ty)


State 188

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   39 rule2: "," "identifier" "=" . exp
   40      | "," "identifier" "=" . exp rule2
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 198
    lvalue     go to state 21
    lvalueexp  go to state 22


State 189

   77 classfield: "method" "identifier" "(" ")" ":" . "identifier" "=" exp

    "identifier"  shift, and go to state 199


State 190

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   78 classfield: "method" "identifier" "(" ")" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 200
    lvalue     go to state 21
    lvalueexp  go to state 22


State 191

   75 classfield: "method" "identifier" "(" tyfields ")" . ":" "identifier" "=" exp
   76           | "method" "identifier" "(" tyfields ")" . "=" exp

    ":"  shift, and go to state 201
    "="  shift, and go to state 202


State 192

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   33    | "for" "identifier" ":=" exp "to" exp "do" exp .  ["end of file", "class", ",", "do", "else", "end", "function", "import", "in", "method", "primitive", "}", "]", ")", ";", "then", "to", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 33 (exp)

    Conflict between rule 33 and token "&" resolved as shift (DO < "&").
    Conflict between rule 33 and token "/" resolved as shift (DO < "/").
    Conflict between rule 33 and token "=" resolved as shift (DO < "=").
    Conflict between rule 33 and token ">=" resolved as shift (DO < ">=").
    Conflict between rule 33 and token ">" resolved as shift (DO < ">").
    Conflict between rule 33 and token "<=" resolved as shift (DO < "<=").
    Conflict between rule 33 and token "<" resolved as shift (DO < "<").
    Conflict between rule 33 and token "-" resolved as shift (DO < "-").
    Conflict between rule 33 and token "<>" resolved as shift (DO < "<>").
    Conflict between rule 33 and token "|" resolved as shift (DO < "|").
    Conflict between rule 33 and token "+" resolved as shift (DO < "+").
    Conflict between rule 33 and token "*" resolved as shift (DO < "*").


State 193

   89 rule5: "," "identifier" . ":" "identifier"
   90      | "," "identifier" . ":" "identifier" rule5

    ":"  shift, and go to state 203


State 194

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   62 dec: "function" "identifier" "(" ")" ":" "identifier" "=" exp .  ["end of file", "class", "function", "import", "in", "primitive", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 62 (dec)


State 195

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   60 dec: "function" "identifier" "(" tyfields ")" ":" "identifier" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 204
    lvalue     go to state 21
    lvalueexp  go to state 22


State 196

   84 ty: "class" "extends" "identifier" "{" "}" .

    $default  reduce using rule 84 (ty)


State 197

   83 ty: "class" "extends" "identifier" "{" classfields . "}"

    "}"  shift, and go to state 205


State 198

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   39 rule2: . "," "identifier" "=" exp
   39      | "," "identifier" "=" exp .  ["}"]
   40      | . "," "identifier" "=" exp rule2
   40      | "," "identifier" "=" exp . rule2

    "&"   shift, and go to state 45
    ","   shift, and go to state 152
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 39 (rule2)

    rule2  go to state 206


State 199

   77 classfield: "method" "identifier" "(" ")" ":" "identifier" . "=" exp

    "="  shift, and go to state 207


State 200

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   78 classfield: "method" "identifier" "(" ")" "=" exp .  ["method", "}", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 78 (classfield)


State 201

   75 classfield: "method" "identifier" "(" tyfields ")" ":" . "identifier" "=" exp

    "identifier"  shift, and go to state 208


State 202

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   76 classfield: "method" "identifier" "(" tyfields ")" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 209
    lvalue     go to state 21
    lvalueexp  go to state 22


State 203

   89 rule5: "," "identifier" ":" . "identifier"
   90      | "," "identifier" ":" . "identifier" rule5

    "identifier"  shift, and go to state 210


State 204

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   60 dec: "function" "identifier" "(" tyfields ")" ":" "identifier" "=" exp .  ["end of file", "class", "function", "import", "in", "primitive", "type", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 60 (dec)


State 205

   83 ty: "class" "extends" "identifier" "{" classfields "}" .

    $default  reduce using rule 83 (ty)


State 206

   40 rule2: "," "identifier" "=" exp rule2 .

    $default  reduce using rule 40 (rule2)


State 207

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   77 classfield: "method" "identifier" "(" ")" ":" "identifier" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 211
    lvalue     go to state 21
    lvalueexp  go to state 22


State 208

   75 classfield: "method" "identifier" "(" tyfields ")" ":" "identifier" . "=" exp

    "="  shift, and go to state 212


State 209

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   76 classfield: "method" "identifier" "(" tyfields ")" "=" exp .  ["method", "}", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 76 (classfield)


State 210

   89 rule5: . "," "identifier" ":" "identifier"
   89      | "," "identifier" ":" "identifier" .  ["}", ")"]
   90      | . "," "identifier" ":" "identifier" rule5
   90      | "," "identifier" ":" "identifier" . rule5

    ","  shift, and go to state 180

    $default  reduce using rule 89 (rule5)

    rule5  go to state 213


State 211

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   77 classfield: "method" "identifier" "(" ")" ":" "identifier" "=" exp .  ["method", "}", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 77 (classfield)


State 212

    3 exp: . "nil"
    4    | . "integer"
    5    | . "string"
    6    | . "identifier" "[" exp "]" "of" exp
    7    | . "identifier" "{" "}"
    8    | . "identifier" "{" rule1 "}"
    9    | . "new" "identifier"
   10    | . lvalue
   11    | . "identifier" "(" ")"
   12    | . "identifier" "(" rule3 ")"
   13    | . lvalue "." "identifier" "(" rule3 ")"
   14    | . "-" exp
   15    | . exp "+" exp
   16    | . exp "-" exp
   17    | . exp "*" exp
   18    | . exp "/" exp
   19    | . exp "=" exp
   20    | . exp "<>" exp
   21    | . exp ">" exp
   22    | . exp "<" exp
   23    | . exp ">=" exp
   24    | . exp "<=" exp
   25    | . exp "&" exp
   26    | . exp "|" exp
   27    | . "(" ")"
   28    | . "(" exps ")"
   29    | . lvalue ":=" exp
   30    | . "if" exp "then" exp
   31    | . "if" exp "then" exp "else" exp
   32    | . "while" exp "do" exp
   33    | . "for" "identifier" ":=" exp "to" exp "do" exp
   34    | . "break"
   35    | . "let" decs "in" exps "end"
   36    | . "let" decs "in" "end"
   45 lvalue: . "identifier"
   46       | . lvalueexp
   47 lvalueexp: . "identifier" "[" exp "]"
   48          | . lvalue "." "identifier"
   49          | . lvalueexp "[" exp "]"
   75 classfield: "method" "identifier" "(" tyfields ")" ":" "identifier" "=" . exp

    "string"      shift, and go to state 1
    "identifier"  shift, and go to state 2
    "integer"     shift, and go to state 3
    "break"       shift, and go to state 4
    "for"         shift, and go to state 6
    "if"          shift, and go to state 8
    "let"         shift, and go to state 10
    "("           shift, and go to state 11
    "-"           shift, and go to state 12
    "new"         shift, and go to state 13
    "nil"         shift, and go to state 14
    "while"       shift, and go to state 18

    exp        go to state 214
    lvalue     go to state 21
    lvalueexp  go to state 22


State 213

   90 rule5: "," "identifier" ":" "identifier" rule5 .

    $default  reduce using rule 90 (rule5)


State 214

   15 exp: exp . "+" exp
   16    | exp . "-" exp
   17    | exp . "*" exp
   18    | exp . "/" exp
   19    | exp . "=" exp
   20    | exp . "<>" exp
   21    | exp . ">" exp
   22    | exp . "<" exp
   23    | exp . ">=" exp
   24    | exp . "<=" exp
   25    | exp . "&" exp
   26    | exp . "|" exp
   75 classfield: "method" "identifier" "(" tyfields ")" ":" "identifier" "=" exp .  ["method", "}", "var"]

    "&"   shift, and go to state 45
    "/"   shift, and go to state 46
    "="   shift, and go to state 47
    ">="  shift, and go to state 48
    ">"   shift, and go to state 49
    "<="  shift, and go to state 50
    "<"   shift, and go to state 51
    "-"   shift, and go to state 52
    "<>"  shift, and go to state 53
    "|"   shift, and go to state 54
    "+"   shift, and go to state 55
    "*"   shift, and go to state 56

    $default  reduce using rule 75 (classfield)
