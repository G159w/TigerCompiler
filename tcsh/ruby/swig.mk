## Generated by ./generate-swig-mk. Do not edit by hand!

AM_LDFLAGS = -avoid-version -module -shared
AM_LIBADD  = $(top_builddir)/src/libtc.la
tcdir = $(top_srcdir)

CLEANFILES =

# The list of dependencies generated as a side-effect of running swig.
SWIG_GENERATED_DEPS =

ruby_DATA = 

## Module: misc.
ruby_LTLIBRARIES += tiger_misc.la
nodist_tiger_misc_la_SOURCES = tiger_misc-wrap.cc
tiger_misc_la_LIBADD = $(AM_LIBADD)
CLEANFILES += tiger_misc-wrap.cc
tiger_misc-wrap.cc: $(tcdir)/lib/misc/tiger_misc.i
	$(AM_V_GEN)if $(SWIG) $(AM_SWIGFLAGS) $(SWIGFLAGS) -MD -MF "$(DEPDIR)/tiger_misc-wrap.Tcc" -o tiger_misc-wrap.cc $(tcdir)/lib/misc/tiger_misc.i; \
	then \
	  mv -f "$(DEPDIR)/tiger_misc-wrap.Tcc" "$(DEPDIR)/tiger_misc-wrap.Pcc"; \
	else \
	  rm -f "$(DEPDIR)/tiger_misc-wrap.Tcc"; exit 1; \
	fi

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiger_misc-wrap.Pcc@am__quote@

@AMDEP_TRUE@ SWIG_GENERATED_DEPS += ./$(DEPDIR)/tiger_misc-wrap.Pcc


## Module: ast.
ruby_LTLIBRARIES += tiger_ast.la
nodist_tiger_ast_la_SOURCES = tiger_ast-wrap.cc
tiger_ast_la_LIBADD = $(AM_LIBADD)
CLEANFILES += tiger_ast-wrap.cc
tiger_ast-wrap.cc: $(tcdir)/src/ast/tiger_ast.i
	$(AM_V_GEN)if $(SWIG) $(AM_SWIGFLAGS) $(SWIGFLAGS) -MD -MF "$(DEPDIR)/tiger_ast-wrap.Tcc" -o tiger_ast-wrap.cc $(tcdir)/src/ast/tiger_ast.i; \
	then \
	  mv -f "$(DEPDIR)/tiger_ast-wrap.Tcc" "$(DEPDIR)/tiger_ast-wrap.Pcc"; \
	else \
	  rm -f "$(DEPDIR)/tiger_ast-wrap.Tcc"; exit 1; \
	fi

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiger_ast-wrap.Pcc@am__quote@

@AMDEP_TRUE@ SWIG_GENERATED_DEPS += ./$(DEPDIR)/tiger_ast-wrap.Pcc


## Module: common.
ruby_LTLIBRARIES += tiger_common.la
nodist_tiger_common_la_SOURCES = tiger_common-wrap.cc
tiger_common_la_LIBADD = $(AM_LIBADD)
CLEANFILES += tiger_common-wrap.cc
tiger_common-wrap.cc: $(tcdir)/src/tiger_common.i
	$(AM_V_GEN)if $(SWIG) $(AM_SWIGFLAGS) $(SWIGFLAGS) -MD -MF "$(DEPDIR)/tiger_common-wrap.Tcc" -o tiger_common-wrap.cc $(tcdir)/src/tiger_common.i; \
	then \
	  mv -f "$(DEPDIR)/tiger_common-wrap.Tcc" "$(DEPDIR)/tiger_common-wrap.Pcc"; \
	else \
	  rm -f "$(DEPDIR)/tiger_common-wrap.Tcc"; exit 1; \
	fi

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiger_common-wrap.Pcc@am__quote@

@AMDEP_TRUE@ SWIG_GENERATED_DEPS += ./$(DEPDIR)/tiger_common-wrap.Pcc


## Module: parse.
ruby_LTLIBRARIES += tiger_parse.la
nodist_tiger_parse_la_SOURCES = tiger_parse-wrap.cc
tiger_parse_la_LIBADD = $(AM_LIBADD)
CLEANFILES += tiger_parse-wrap.cc
tiger_parse-wrap.cc: $(tcdir)/src/parse/tiger_parse.i
	$(AM_V_GEN)if $(SWIG) $(AM_SWIGFLAGS) $(SWIGFLAGS) -MD -MF "$(DEPDIR)/tiger_parse-wrap.Tcc" -o tiger_parse-wrap.cc $(tcdir)/src/parse/tiger_parse.i; \
	then \
	  mv -f "$(DEPDIR)/tiger_parse-wrap.Tcc" "$(DEPDIR)/tiger_parse-wrap.Pcc"; \
	else \
	  rm -f "$(DEPDIR)/tiger_parse-wrap.Tcc"; exit 1; \
	fi

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiger_parse-wrap.Pcc@am__quote@

@AMDEP_TRUE@ SWIG_GENERATED_DEPS += ./$(DEPDIR)/tiger_parse-wrap.Pcc


## Module: object.
ruby_LTLIBRARIES += tiger_object.la
nodist_tiger_object_la_SOURCES = tiger_object-wrap.cc
tiger_object_la_LIBADD = $(AM_LIBADD)
CLEANFILES += tiger_object-wrap.cc
tiger_object-wrap.cc: $(tcdir)/src/object/tiger_object.i
	$(AM_V_GEN)if $(SWIG) $(AM_SWIGFLAGS) $(SWIGFLAGS) -MD -MF "$(DEPDIR)/tiger_object-wrap.Tcc" -o tiger_object-wrap.cc $(tcdir)/src/object/tiger_object.i; \
	then \
	  mv -f "$(DEPDIR)/tiger_object-wrap.Tcc" "$(DEPDIR)/tiger_object-wrap.Pcc"; \
	else \
	  rm -f "$(DEPDIR)/tiger_object-wrap.Tcc"; exit 1; \
	fi

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tiger_object-wrap.Pcc@am__quote@

@AMDEP_TRUE@ SWIG_GENERATED_DEPS += ./$(DEPDIR)/tiger_object-wrap.Pcc



# Target `deps-reset' re-initializes the dependencies generated as a
# side-effect of running swig.
.PHONY: deps-reset
deps-reset:
	@list='$(SWIG_GENERATED_DEPS)'; for d in $$list; do \
	  echo '# dummy' > $$d; \
	done


